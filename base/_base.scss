// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------
[v-cloak] {
  display: none !important;
}

/**
 * Root variables
 */
:root {
  // SCSS variables have to be used in such a way #{$your_variable}
  // Example --colour-black: #{$colour-black};
}

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
  /**
 * 62.5% = 10px
 * 100% = 16px
 */
  font-size: 62.5%;
}

body {
  /**
 * Make base font-size 16px after setting up 62.5% in html
 */
  font-size: 1.6rem;
}

.main {
}


/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
 * Fix for an invisible gap
 * Avoid overflowing of an image
 */
img {
  vertical-align: top;
  max-width: 100%;
  position: relative;

  /* style this to fit your needs */
  /* and remove [alt] to apply to all images*/
  &[alt]:after {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
    font-weight: 300;
    line-height: 2;
    text-align: center;
    content: attr(alt);
  }
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
  width: 100%;
  max-width: 1640px;

  &--fluid {
    @extend .container;
    @include media('<=1640px') {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.position {
  &--relative {
    position: relative;
  }
}


